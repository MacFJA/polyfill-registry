[
  {
    "name": "adhocore/php-polyfills",
    "type": "polyfill",
    "require": [],
    "replace": {
      "php": "5.4 && 5.5"
    },
    "functions": [
      "array_column",
      "hex2bin",
      "http_response_code"
    ],
    "classes": [],
    "constants": []
  },
  {
    "name": "appserver-io/pthreads-polyfill",
    "type": "polyfill",
    "require": [],
    "replace": {
      "ext-pthreads": "*"
    },
    "functions": [],
    "classes": [
      "Collectable",
      "Mutex",
      "Pool",
      "Stackable",
      "Thread",
      "Threaded",
      "Volatile",
      "Worker"
    ],
    "constants": []
  },
  {
    "name": "ayesh/is_countable-polyfill",
    "type": "polyfill",
    "require": {
      "php": "5.3"
    },
    "replace": {
      "php": "7.3.*"
    },
    "functions": [
      "is_countable"
    ],
    "classes": [],
    "constants": []
  },
  {
    "name": "byjg/phpthread",
    "type": "alternative",
    "require": {
      "php": "5.4"
    },
    "replace": {
      "ext-pthreads": "*",
      "ext-pcntl": "*"
    },
    "functions": [],
    "classes": [],
    "constants": []
  },
  {
    "name": "ducks-project/apache",
    "type": "alternative",
    "require": {
      "php": "5.3.9"
    },
    "replace": [],
    "functions": [],
    "classes": [],
    "constants": []
  },
  {
    "name": "fisharebest/ext-calendar",
    "type": "polyfill",
    "require": {
      "php": "5.3"
    },
    "replace": {
      "ext-calendar": "*"
    },
    "functions": [
      "cal_days_in_month",
      "cal_from_jd",
      "cal_info",
      "cal_to_jd",
      "easter_date",
      "easter_days",
      "FrenchToJD",
      "GregorianToJD",
      "JDDayOfWeek",
      "JDMonthName",
      "JDToFrench",
      "JDToGregorian",
      "jdtojewish",
      "JDToJulian",
      "jdtounix",
      "JewishToJD",
      "JulianToJD",
      "unixtojd"
    ],
    "classes": [],
    "constants": [
      "CAL_GREGORIAN",
      "CAL_JULIAN",
      "CAL_JEWISH",
      "CAL_FRENCH",
      "CAL_NUM_CALS",
      "CAL_DOW_DAYNO",
      "CAL_DOW_SHORT",
      "CAL_DOW_LONG",
      "CAL_MONTH_GREGORIAN_SHORT",
      "CAL_MONTH_GREGORIAN_LONG",
      "CAL_MONTH_JULIAN_SHORT",
      "CAL_MONTH_JULIAN_LONG",
      "CAL_MONTH_JEWISH",
      "CAL_MONTH_FRENCH",
      "CAL_EASTER_DEFAULT",
      "CAL_EASTER_ROMAN",
      "CAL_EASTER_ALWAYS_GREGORIAN",
      "CAL_EASTER_ALWAYS_JULIAN",
      "CAL_JEWISH_ADD_ALAFIM_GERESH",
      "CAL_JEWISH_ADD_ALAFIM",
      "CAL_JEWISH_ADD_GERESHAYIM"
    ]
  },
  {
    "name": "fisharebest/php-polyfill",
    "type": "polyfill",
    "require": [],
    "replace": {
      "ext-apcu": "*",
      "php": "5.4.* || 5.5.* || 5.6.* || 7.0.*",
      "ext-iconv": "*",
      "ext-intl": "*",
      "ext-mbstring": "*",
      "ext-calendar": "*",
      "pecl-http": "*"
    },
    "functions": [
      "apcu_add",
      "apcu_delete",
      "apcu_exists",
      "apcu_fetch",
      "apcu_store",
      "apcu_cache_info",
      "apcu_cas",
      "apcu_clear_cache",
      "apcu_dec",
      "apcu_inc",
      "apcu_sma_info",
      "trait_exists",
      "class_uses",
      "hex2bin",
      "session_register_shutdown",
      "boolval",
      "json_last_error_msg",
      "array_column",
      "hash_pbkdf2",
      "password_hash",
      "password_get_info",
      "password_needs_rehash",
      "password_verify",
      "hash_equals",
      "ldap_escape",
      "gzopen",
      "gzseek",
      "gztell",
      "intdiv",
      "preg_replace_callback_array",
      "error_clear_last",
      "random_bytes",
      "random_int",
      "iconv",
      "iconv_get_encoding",
      "iconv_set_encoding",
      "iconv_mime_encode",
      "iconv_mime_decode_headers",
      "iconv_strlen",
      "iconv_strpos",
      "iconv_strrpos",
      "iconv_substr",
      "iconv_mime_decode",
      "grapheme_extract",
      "grapheme_stripos",
      "grapheme_stristr",
      "grapheme_strlen",
      "grapheme_strpos",
      "grapheme_strripos",
      "grapheme_strrpos",
      "grapheme_strstr",
      "grapheme_substr",
      "intl_is_failure",
      "intl_get_error_code",
      "intl_get_error_message",
      "intl_error_name",
      "mb_convert_encoding",
      "mb_decode_mimeheader",
      "mb_encode_mimeheader",
      "mb_decode_numericentity",
      "mb_encode_numericentity",
      "mb_convert_case",
      "mb_internal_encoding",
      "mb_language",
      "mb_list_encodings",
      "mb_encoding_aliases",
      "mb_check_encoding",
      "mb_detect_encoding",
      "mb_detect_order",
      "mb_parse_str",
      "mb_strlen",
      "mb_strpos",
      "mb_strtolower",
      "mb_strtoupper",
      "mb_substitute_character",
      "mb_substr",
      "mb_stripos",
      "mb_stristr",
      "mb_strrchr",
      "mb_strrichr",
      "mb_strripos",
      "mb_strrpos",
      "mb_strstr",
      "mb_get_info",
      "mb_http_output",
      "mb_strwidth",
      "mb_substr_count",
      "mb_output_handler",
      "mb_http_input",
      "mb_convert_variables",
      "mb_ord",
      "mb_chr",
      "mb_scrub",
      "cal_days_in_month",
      "cal_from_jd",
      "cal_info",
      "cal_to_jd",
      "easter_date",
      "easter_days",
      "FrenchToJD",
      "GregorianToJD",
      "JDDayOfWeek",
      "JDMonthName",
      "JDToFrench",
      "JDToGregorian",
      "jdtojewish",
      "JDToJulian",
      "jdtounix",
      "JewishToJD",
      "JulianToJD",
      "unixtojd",
      "utf8_encode",
      "utf8_decode",
      "http_build_url"
    ],
    "classes": [
      "APCUIterator",
      "SessionUpdateTimestampHandlerInterface",
      "ArithmeticError",
      "AssertionError",
      "DivisionByZeroError",
      "Error",
      "ParseError",
      "TypeError",
      "Collator",
      "NumberFormatter",
      "Locale",
      "IntlDateFormatter",
      "Normalizer"
    ],
    "constants": [
      "PASSWORD_BCRYPT",
      "PASSWORD_DEFAULT",
      "PASSWORD_BCRYPT_DEFAULT_COST",
      "PHP_INT_MIN",
      "ICONV_IMPL",
      "ICONV_VERSION",
      "ICONV_MIME_DECODE_STRICT",
      "ICONV_MIME_DECODE_CONTINUE_ON_ERROR",
      "CAL_GREGORIAN",
      "CAL_JULIAN",
      "CAL_JEWISH",
      "CAL_FRENCH",
      "CAL_NUM_CALS",
      "CAL_DOW_DAYNO",
      "CAL_DOW_SHORT",
      "CAL_DOW_LONG",
      "CAL_MONTH_GREGORIAN_SHORT",
      "CAL_MONTH_GREGORIAN_LONG",
      "CAL_MONTH_JULIAN_SHORT",
      "CAL_MONTH_JULIAN_LONG",
      "CAL_MONTH_JEWISH",
      "CAL_MONTH_FRENCH",
      "CAL_EASTER_DEFAULT",
      "CAL_EASTER_ROMAN",
      "CAL_EASTER_ALWAYS_GREGORIAN",
      "CAL_EASTER_ALWAYS_JULIAN",
      "CAL_JEWISH_ADD_ALAFIM_GERESH",
      "CAL_JEWISH_ADD_ALAFIM",
      "CAL_JEWISH_ADD_GERESHAYIM",
      "HTTP_URL_REPLACE",
      "HTTP_URL_JOIN_PATH",
      "HTTP_URL_JOIN_QUERY",
      "HTTP_URL_STRIP_USER",
      "HTTP_URL_STRIP_PASS",
      "HTTP_URL_STRIP_AUTH",
      "HTTP_URL_STRIP_PORT",
      "HTTP_URL_STRIP_PATH",
      "HTTP_URL_STRIP_QUERY",
      "HTTP_URL_STRIP_FRAGMENT",
      "HTTP_URL_STRIP_ALL"
    ]
  },
  {
    "name": "ircmaxell/password-compat",
    "type": "polyfill",
    "require": {
      "php": "5.3.7"
    },
    "replace": [],
    "functions": [
      "password_hash",
      "password_get_info",
      "password_needs_rehash",
      "password_verify"
    ],
    "classes": [],
    "constants": [
      "PASSWORD_BCRYPT",
      "PASSWORD_DEFAULT",
      "PASSWORD_BCRYPT_DEFAULT_COST"
    ]
  },
  {
    "name": "jakeasmith/http_build_url",
    "type": "polyfill",
    "require": [],
    "replace": {
      "pecl_http": "*"
    },
    "functions": [
      "http_build_url"
    ],
    "classes": [],
    "constants": [
      "HTTP_URL_REPLACE",
      "HTTP_URL_JOIN_PATH",
      "HTTP_URL_JOIN_QUERY",
      "HTTP_URL_STRIP_USER",
      "HTTP_URL_STRIP_PASS",
      "HTTP_URL_STRIP_AUTH",
      "HTTP_URL_STRIP_PORT",
      "HTTP_URL_STRIP_PATH",
      "HTTP_URL_STRIP_QUERY",
      "HTTP_URL_STRIP_FRAGMENT",
      "HTTP_URL_STRIP_ALL"
    ]
  },
  {
    "name": "jesseschalken/date-time-immutable-polyfill",
    "type": "polyfill",
    "require": [],
    "replace": {
      "php": "5.*"
    },
    "functions": [],
    "classes": [
      "DateTimeInterface",
      "DateTimeImmutable"
    ],
    "constants": []
  },
  {
    "name": "kirra/polyfill-translit",
    "type": "polyfill",
    "require": {
      "php": "5.5.9"
    },
    "replace": {
      "pecl-translit": "*"
    },
    "functions": [
      "transliterate_filters_get",
      "transliterate"
    ],
    "classes": [],
    "constants": []
  },
  {
    "name": "krakjoe/pthreads-polyfill",
    "type": "polyfill",
    "require": [],
    "replace": {
      "ext-pthreads": "*"
    },
    "functions": [],
    "classes": [
      "Thread",
      "Pool",
      "Collectable",
      "Threaded",
      "Volatile",
      "Worker"
    ],
    "constants": []
  },
  {
    "name": "lavoiesl/apc-polyfill",
    "type": "alternative",
    "require": {
      "ext-apcu": "*"
    },
    "replace": {
      "ext-apc": "*"
    },
    "functions": [],
    "classes": [],
    "constants": []
  },
  {
    "name": "lavoiesl/apc-polyfill",
    "type": "alternative",
    "require": {
      "ext-apcu": "*"
    },
    "replace": {
      "ext-apc": "*"
    },
    "functions": [
      "apc_add",
      "apc_cache_info",
      "apc_cas",
      "apc_clear_cache",
      "apc_dec",
      "apc_delete",
      "apc_exists",
      "apc_fetch",
      "apc_inc",
      "apc_sma_info",
      "apc_store"
    ],
    "classes": [],
    "constants": []
  },
  {
    "name": "mollie/polyfill-libsodium",
    "type": "polyfill",
    "require": {
      "php": "7.0"
    },
    "replace": {
      "ext-sodium": "*"
    },
    "functions": [
      "Sodium\\crypto_aead_aes256gcm_is_available",
      "Sodium\\crypto_aead_aes256gcm_decrypt",
      "Sodium\\crypto_aead_aes256gcm_encrypt",
      "Sodium\\crypto_aead_chacha20poly1305_decrypt",
      "Sodium\\crypto_aead_chacha20poly1305_encrypt",
      "Sodium\\crypto_auth",
      "Sodium\\crypto_auth_verify",
      "Sodium\\crypto_box",
      "Sodium\\crypto_box_keypair",
      "Sodium\\crypto_box_seed_keypair",
      "Sodium\\crypto_box_keypair_from_secretkey_and_publickey",
      "Sodium\\crypto_box_open",
      "Sodium\\crypto_box_publickey",
      "Sodium\\crypto_box_publickey_from_secretkey",
      "Sodium\\crypto_box_seal",
      "Sodium\\crypto_box_seal_open",
      "Sodium\\crypto_box_secretkey",
      "Sodium\\crypto_kx",
      "Sodium\\crypto_generichash",
      "Sodium\\crypto_generichash_init",
      "Sodium\\crypto_generichash_update",
      "Sodium\\crypto_generichash_final",
      "Sodium\\crypto_pwhash",
      "Sodium\\crypto_pwhash_str",
      "Sodium\\crypto_pwhash_str_verify",
      "Sodium\\crypto_pwhash_scryptsalsa208sha256",
      "Sodium\\crypto_pwhash_scryptsalsa208sha256_str",
      "Sodium\\crypto_pwhash_scryptsalsa208sha256_str_verify",
      "Sodium\\crypto_scalarmult",
      "Sodium\\crypto_secretbox",
      "Sodium\\crypto_secretbox_open",
      "Sodium\\crypto_shorthash",
      "Sodium\\crypto_sign",
      "Sodium\\crypto_sign_detached",
      "Sodium\\crypto_sign_ed25519_pk_to_curve25519",
      "Sodium\\crypto_sign_ed25519_sk_to_curve25519",
      "Sodium\\crypto_sign_keypair",
      "Sodium\\crypto_sign_keypair_from_secretkey_and_publickey",
      "Sodium\\crypto_sign_open",
      "Sodium\\crypto_sign_publickey",
      "Sodium\\crypto_sign_secretkey",
      "Sodium\\crypto_sign_publickey_from_secretkey",
      "Sodium\\crypto_sign_seed_keypair",
      "Sodium\\crypto_sign_verify_detached",
      "Sodium\\crypto_stream",
      "Sodium\\crypto_stream_xor",
      "Sodium\\randombytes_buf",
      "Sodium\\randombytes_random16",
      "Sodium\\randombytes_uniform",
      "Sodium\\bin2hex",
      "Sodium\\compare",
      "Sodium\\hex2bin",
      "Sodium\\increment",
      "Sodium\\add",
      "Sodium\\library_version_major",
      "Sodium\\library_version_minor",
      "Sodium\\memcmp",
      "Sodium\\memzero",
      "Sodium\\version_string",
      "Sodium\\crypto_scalarmult_base"
    ],
    "classes": [],
    "constants": [
      "Sodium\\CRYPTO_AEAD_AES256GCM_KEYBYTES",
      "Sodium\\CRYPTO_AEAD_AES256GCM_NSECBYTES",
      "Sodium\\CRYPTO_AEAD_AES256GCM_NPUBBYTES",
      "Sodium\\CRYPTO_AEAD_AES256GCM_ABYTES",
      "Sodium\\CRYPTO_AEAD_CHACHA20POLY1305_KEYBYTES",
      "Sodium\\CRYPTO_AEAD_CHACHA20POLY1305_NSECBYTES",
      "Sodium\\CRYPTO_AEAD_CHACHA20POLY1305_NPUBBYTES",
      "Sodium\\CRYPTO_AEAD_CHACHA20POLY1305_ABYTES",
      "Sodium\\CRYPTO_AUTH_BYTES",
      "Sodium\\CRYPTO_AUTH_KEYBYTES",
      "Sodium\\CRYPTO_BOX_SEALBYTES",
      "Sodium\\CRYPTO_BOX_SECRETKEYBYTES",
      "Sodium\\CRYPTO_BOX_PUBLICKEYBYTES",
      "Sodium\\CRYPTO_BOX_KEYPAIRBYTES",
      "Sodium\\CRYPTO_BOX_MACBYTES",
      "Sodium\\CRYPTO_BOX_NONCEBYTES",
      "Sodium\\CRYPTO_BOX_SEEDBYTES",
      "Sodium\\CRYPTO_KX_BYTES",
      "Sodium\\CRYPTO_KX_PUBLICKEYBYTES",
      "Sodium\\CRYPTO_KX_SECRETKEYBYTES",
      "Sodium\\CRYPTO_GENERICHASH_BYTES",
      "Sodium\\CRYPTO_GENERICHASH_BYTES_MIN",
      "Sodium\\CRYPTO_GENERICHASH_BYTES_MAX",
      "Sodium\\CRYPTO_GENERICHASH_KEYBYTES",
      "Sodium\\CRYPTO_GENERICHASH_KEYBYTES_MIN",
      "Sodium\\CRYPTO_GENERICHASH_KEYBYTES_MAX",
      "Sodium\\CRYPTO_PWHASH_SCRYPTSALSA208SHA256_SALTBYTES",
      "Sodium\\CRYPTO_PWHASH_SCRYPTSALSA208SHA256_STRPREFIX",
      "Sodium\\CRYPTO_PWHASH_SCRYPTSALSA208SHA256_OPSLIMIT_INTERACTIVE",
      "Sodium\\CRYPTO_PWHASH_SCRYPTSALSA208SHA256_MEMLIMIT_INTERACTIVE",
      "Sodium\\CRYPTO_PWHASH_SCRYPTSALSA208SHA256_OPSLIMIT_SENSITIVE",
      "Sodium\\CRYPTO_PWHASH_SCRYPTSALSA208SHA256_MEMLIMIT_SENSITIVE",
      "Sodium\\CRYPTO_SCALARMULT_BYTES",
      "Sodium\\CRYPTO_SCALARMULT_SCALARBYTES",
      "Sodium\\CRYPTO_SHORTHASH_BYTES",
      "Sodium\\CRYPTO_SHORTHASH_KEYBYTES",
      "Sodium\\CRYPTO_SECRETBOX_KEYBYTES",
      "Sodium\\CRYPTO_SECRETBOX_MACBYTES",
      "Sodium\\CRYPTO_SECRETBOX_NONCEBYTES",
      "Sodium\\CRYPTO_SIGN_BYTES",
      "Sodium\\CRYPTO_SIGN_SEEDBYTES",
      "Sodium\\CRYPTO_SIGN_PUBLICKEYBYTES",
      "Sodium\\CRYPTO_SIGN_SECRETKEYBYTES",
      "Sodium\\CRYPTO_SIGN_KEYPAIRBYTES",
      "Sodium\\CRYPTO_STREAM_KEYBYTES",
      "Sodium\\CRYPTO_STREAM_NONCEBYTES",
      "Sodium\\CRYPTO_PWHASH_OPSLIMIT_INTERACTIVE",
      "Sodium\\CRYPTO_PWHASH_MEMLIMIT_INTERACTIVE",
      "Sodium\\CRYPTO_PWHASH_SALTBYTES ",
      "Sodium\\CRYPTO_PWHASH_STRPREFIX ",
      "Sodium\\CRYPTO_PWHASH_OPSLIMIT_MODERATE",
      "Sodium\\CRYPTO_PWHASH_MEMLIMIT_MODERATE",
      "Sodium\\CRYPTO_PWHASH_OPSLIMIT_SENSITIVE",
      "Sodium\\CRYPTO_PWHASH_MEMLIMIT_SENSITIVE"
    ]
  },
  {
    "name": "mongofill/mongofill",
    "type": "polyfill",
    "require": [],
    "replace": {
      "ext-mongo": "*"
    },
    "functions": [
      "bson_encode",
      "bson_decode",
      "bson_encode_multiple",
      "bson_decode_multiple"
    ],
    "classes": [
      "MongoClient",
      "MongoDB",
      "MongoCollection",
      "MongoCursor",
      "MongoId",
      "MongoCode",
      "MongoDate",
      "MongoRegex",
      "MongoBinData",
      "MongoInt32",
      "MongoInt64",
      "MongoDBRef",
      "MongoMinKey",
      "MongoMaxKey",
      "MongoTimestamp",
      "MongoGridFS",
      "MongoGridFSFile",
      "MongoGridFSCursor",
      "MongoLog",
      "Mongo",
      "MongoException",
      "MongoResultException",
      "MongoCursorException",
      "MongoCursorTimeoutException",
      "MongoConnectionException",
      "MongoGridFSException"
    ],
    "constants": []
  },
  {
    "name": "ovr/newrelic-polyfill",
    "type": "stub",
    "require": [],
    "replace": {
      "ext-newrelic": "*"
    },
    "functions": [
      "newrelic_add_custom_parameter",
      "newrelic_add_custom_tracer",
      "newrelic_background_job",
      "newrelic_capture_params",
      "newrelic_custom_metric",
      "newrelic_disable_autorum",
      "newrelic_end_of_transaction",
      "newrelic_get_browser_timing_footer",
      "newrelic_get_browser_timing_header",
      "newrelic_ignore_apdex",
      "newrelic_ignore_transaction",
      "newrelic_name_transaction",
      "newrelic_notice_error",
      "newrelic_record_custom_event",
      "newrelic_set_appname",
      "newrelic_set_user_attributes",
      "newrelic_start_transaction"
    ],
    "classes": [],
    "constants": []
  },
  {
    "name": "paragonie/random_compat",
    "type": "polyfill",
    "require": {
      "php": "5.2"
    },
    "replace": [],
    "functions": [
      "random_bytes",
      "random_int"
    ],
    "classes": [
      "Error",
      "TypeError"
    ],
    "constants": [
      "PHP_VERSION_ID",
      "RANDOM_COMPAT_READ_BUFFER"
    ]
  },
  {
    "name": "paragonie/sodium_compat",
    "type": "polyfill",
    "require": [],
    "replace": {
      "ext-sodium": "*",
      "ext-libsodium": "*"
    },
    "functions": [
      "sodium_bin2hex",
      "sodium_compare",
      "sodium_crypto_aead_aes256gcm_decrypt",
      "sodium_crypto_aead_aes256gcm_encrypt",
      "sodium_crypto_aead_aes256gcm_is_available",
      "sodium_crypto_aead_chacha20poly1305_decrypt",
      "sodium_crypto_aead_chacha20poly1305_encrypt",
      "sodium_crypto_aead_chacha20poly1305_keygen",
      "sodium_crypto_aead_chacha20poly1305_ietf_decrypt",
      "sodium_crypto_aead_chacha20poly1305_ietf_encrypt",
      "sodium_crypto_aead_chacha20poly1305_ietf_keygen",
      "sodium_crypto_aead_xchacha20poly1305_ietf_decrypt",
      "sodium_crypto_aead_xchacha20poly1305_ietf_encrypt",
      "sodium_crypto_aead_xchacha20poly1305_ietf_keygen",
      "sodium_crypto_auth",
      "sodium_crypto_auth_keygen",
      "sodium_crypto_auth_verify",
      "sodium_crypto_box",
      "sodium_crypto_box_keypair",
      "sodium_crypto_box_keypair_from_secretkey_and_publickey",
      "sodium_crypto_box_open",
      "sodium_crypto_box_publickey",
      "sodium_crypto_box_publickey_from_secretkey",
      "sodium_crypto_box_seal",
      "sodium_crypto_box_seal_open",
      "sodium_crypto_box_secretkey",
      "sodium_crypto_box_seed_keypair",
      "sodium_crypto_generichash",
      "sodium_crypto_generichash_final",
      "sodium_crypto_generichash_init",
      "sodium_crypto_generichash_keygen",
      "sodium_crypto_generichash_update",
      "sodium_crypto_kx",
      "sodium_crypto_pwhash",
      "sodium_crypto_pwhash_str",
      "sodium_crypto_pwhash_str_verify",
      "sodium_crypto_pwhash_scryptsalsa208sha256",
      "sodium_crypto_pwhash_scryptsalsa208sha256_str",
      "sodium_crypto_pwhash_scryptsalsa208sha256_str_verify",
      "sodium_crypto_scalarmult",
      "sodium_crypto_scalarmult_base",
      "sodium_crypto_secretbox",
      "sodium_crypto_secretbox_keygen",
      "sodium_crypto_secretbox_open",
      "sodium_crypto_shorthash",
      "sodium_crypto_shorthash_keygen",
      "sodium_crypto_sign",
      "sodium_crypto_sign_detached",
      "sodium_crypto_sign_keypair",
      "sodium_crypto_sign_open",
      "sodium_crypto_sign_publickey",
      "sodium_crypto_sign_publickey_from_secretkey",
      "sodium_crypto_sign_secretkey",
      "sodium_crypto_sign_seed_keypair",
      "sodium_crypto_sign_verify_detached",
      "sodium_crypto_sign_ed25519_pk_to_curve25519",
      "sodium_crypto_sign_ed25519_sk_to_curve25519",
      "sodium_crypto_stream",
      "sodium_crypto_stream_keygen",
      "sodium_crypto_stream_xor",
      "sodium_hex2bin",
      "sodium_increment",
      "sodium_library_version_major",
      "sodium_library_version_minor",
      "sodium_version_string",
      "sodium_memcmp",
      "sodium_memzero",
      "sodium_randombytes_buf",
      "sodium_randombytes_uniform",
      "sodium_randombytes_random16",
      "Sodium\\bin2hex",
      "Sodium\\compare",
      "Sodium\\crypto_aead_aes256gcm_decrypt",
      "Sodium\\crypto_aead_aes256gcm_encrypt",
      "Sodium\\crypto_aead_aes256gcm_is_available",
      "Sodium\\crypto_aead_chacha20poly1305_decrypt",
      "Sodium\\crypto_aead_chacha20poly1305_encrypt",
      "Sodium\\crypto_aead_chacha20poly1305_ietf_decrypt",
      "Sodium\\crypto_aead_chacha20poly1305_ietf_encrypt",
      "Sodium\\crypto_auth",
      "Sodium\\crypto_auth_verify",
      "Sodium\\crypto_box",
      "Sodium\\crypto_box_keypair",
      "Sodium\\crypto_box_keypair_from_secretkey_and_publickey",
      "Sodium\\crypto_box_open",
      "Sodium\\crypto_box_publickey",
      "Sodium\\crypto_box_publickey_from_secretkey",
      "Sodium\\crypto_box_seal",
      "Sodium\\crypto_box_seal_open",
      "Sodium\\crypto_box_secretkey",
      "Sodium\\crypto_generichash",
      "Sodium\\crypto_generichash_final",
      "Sodium\\crypto_generichash_init",
      "Sodium\\crypto_generichash_update",
      "Sodium\\crypto_kx",
      "Sodium\\crypto_pwhash",
      "Sodium\\crypto_pwhash_str",
      "Sodium\\crypto_pwhash_str_verify",
      "Sodium\\crypto_pwhash_scryptsalsa208sha256",
      "Sodium\\crypto_pwhash_scryptsalsa208sha256_str",
      "Sodium\\crypto_pwhash_scryptsalsa208sha256_str_verify",
      "Sodium\\crypto_scalarmult",
      "Sodium\\crypto_scalarmult_base",
      "Sodium\\crypto_secretbox",
      "Sodium\\crypto_secretbox_open",
      "Sodium\\crypto_shorthash",
      "Sodium\\crypto_sign",
      "Sodium\\crypto_sign_detached",
      "Sodium\\crypto_sign_keypair",
      "Sodium\\crypto_sign_open",
      "Sodium\\crypto_sign_publickey",
      "Sodium\\crypto_sign_publickey_from_secretkey",
      "Sodium\\crypto_sign_secretkey",
      "Sodium\\crypto_sign_seed_keypair",
      "Sodium\\crypto_sign_verify_detached",
      "Sodium\\crypto_sign_ed25519_pk_to_curve25519",
      "Sodium\\crypto_sign_ed25519_sk_to_curve25519",
      "Sodium\\crypto_stream",
      "Sodium\\crypto_stream_xor",
      "Sodium\\hex2bin",
      "Sodium\\memcmp",
      "Sodium\\memzero",
      "Sodium\\randombytes_buf",
      "Sodium\\randombytes_uniform",
      "Sodium\\randombytes_random16"
    ],
    "classes": [
      "SodiumException"
    ],
    "constants": [
      "Sodium\\CRYPTO_AEAD_AES256GCM_KEYBYTES",
      "Sodium\\CRYPTO_AEAD_AES256GCM_NSECBYTES",
      "Sodium\\CRYPTO_AEAD_AES256GCM_NPUBBYTES",
      "Sodium\\CRYPTO_AEAD_AES256GCM_ABYTES",
      "Sodium\\CRYPTO_AEAD_CHACHA20POLY1305_KEYBYTES",
      "Sodium\\CRYPTO_AEAD_CHACHA20POLY1305_NSECBYTES",
      "Sodium\\CRYPTO_AEAD_CHACHA20POLY1305_NPUBBYTES",
      "Sodium\\CRYPTO_AEAD_CHACHA20POLY1305_ABYTES",
      "Sodium\\CRYPTO_AEAD_CHACHA20POLY1305_IETF_KEYBYTES",
      "Sodium\\CRYPTO_AEAD_CHACHA20POLY1305_IETF_NSECBYTES",
      "Sodium\\CRYPTO_AEAD_CHACHA20POLY1305_IETF_NPUBBYTES",
      "Sodium\\CRYPTO_AEAD_CHACHA20POLY1305_IETF_ABYTES",
      "Sodium\\CRYPTO_AUTH_BYTES",
      "Sodium\\CRYPTO_AUTH_KEYBYTES",
      "Sodium\\CRYPTO_BOX_SEALBYTES",
      "Sodium\\CRYPTO_BOX_SECRETKEYBYTES",
      "Sodium\\CRYPTO_BOX_PUBLICKEYBYTES",
      "Sodium\\CRYPTO_BOX_KEYPAIRBYTES",
      "Sodium\\CRYPTO_BOX_MACBYTES",
      "Sodium\\CRYPTO_BOX_NONCEBYTES",
      "Sodium\\CRYPTO_BOX_SEEDBYTES",
      "Sodium\\CRYPTO_KX_BYTES",
      "Sodium\\CRYPTO_KX_SEEDBYTES",
      "Sodium\\CRYPTO_KX_PUBLICKEYBYTES",
      "Sodium\\CRYPTO_KX_SECRETKEYBYTES",
      "Sodium\\CRYPTO_GENERICHASH_BYTES",
      "Sodium\\CRYPTO_GENERICHASH_BYTES_MIN",
      "Sodium\\CRYPTO_GENERICHASH_BYTES_MAX",
      "Sodium\\CRYPTO_GENERICHASH_KEYBYTES",
      "Sodium\\CRYPTO_GENERICHASH_KEYBYTES_MIN",
      "Sodium\\CRYPTO_GENERICHASH_KEYBYTES_MAX",
      "Sodium\\CRYPTO_SCALARMULT_BYTES",
      "Sodium\\CRYPTO_SCALARMULT_SCALARBYTES",
      "Sodium\\CRYPTO_SHORTHASH_BYTES",
      "Sodium\\CRYPTO_SHORTHASH_KEYBYTES",
      "Sodium\\CRYPTO_SECRETBOX_KEYBYTES",
      "Sodium\\CRYPTO_SECRETBOX_MACBYTES",
      "Sodium\\CRYPTO_SECRETBOX_NONCEBYTES",
      "Sodium\\CRYPTO_SIGN_BYTES",
      "Sodium\\CRYPTO_SIGN_SEEDBYTES",
      "Sodium\\CRYPTO_SIGN_PUBLICKEYBYTES",
      "Sodium\\CRYPTO_SIGN_SECRETKEYBYTES",
      "Sodium\\CRYPTO_SIGN_KEYPAIRBYTES",
      "Sodium\\CRYPTO_STREAM_KEYBYTES",
      "Sodium\\CRYPTO_STREAM_NONCEBYTES",
      "SODIUM_CRYPTO_AEAD_CHACHA20POLY1305_KEYBYTES",
      "SODIUM_CRYPTO_AEAD_CHACHA20POLY1305_NSECBYTES",
      "SODIUM_CRYPTO_AEAD_CHACHA20POLY1305_NPUBBYTES",
      "SODIUM_CRYPTO_AEAD_CHACHA20POLY1305_ABYTES",
      "SODIUM_CRYPTO_AEAD_AES256GCM_KEYBYTES",
      "SODIUM_CRYPTO_AEAD_AES256GCM_NSECBYTES",
      "SODIUM_CRYPTO_AEAD_AES256GCM_NPUBBYTES",
      "SODIUM_CRYPTO_AEAD_AES256GCM_ABYTES",
      "SODIUM_CRYPTO_AEAD_CHACHA20POLY1305_IETF_KEYBYTES",
      "SODIUM_CRYPTO_AEAD_CHACHA20POLY1305_IETF_NSECBYTES",
      "SODIUM_CRYPTO_AEAD_CHACHA20POLY1305_IETF_NPUBBYTES",
      "SODIUM_CRYPTO_AEAD_CHACHA20POLY1305_IETF_ABYTES",
      "SODIUM_CRYPTO_AUTH_BYTES",
      "SODIUM_CRYPTO_AUTH_KEYBYTES",
      "SODIUM_CRYPTO_BOX_SEALBYTES",
      "SODIUM_CRYPTO_BOX_SECRETKEYBYTES",
      "SODIUM_CRYPTO_BOX_PUBLICKEYBYTES",
      "SODIUM_CRYPTO_BOX_KEYPAIRBYTES",
      "SODIUM_CRYPTO_BOX_MACBYTES",
      "SODIUM_CRYPTO_BOX_NONCEBYTES",
      "SODIUM_CRYPTO_BOX_SEEDBYTES",
      "SODIUM_CRYPTO_KX_BYTES",
      "SODIUM_CRYPTO_KX_SEEDBYTES",
      "SODIUM_CRYPTO_KX_PUBLICKEYBYTES",
      "SODIUM_CRYPTO_KX_SECRETKEYBYTES",
      "SODIUM_CRYPTO_GENERICHASH_BYTES",
      "SODIUM_CRYPTO_GENERICHASH_BYTES_MIN",
      "SODIUM_CRYPTO_GENERICHASH_BYTES_MAX",
      "SODIUM_CRYPTO_GENERICHASH_KEYBYTES",
      "SODIUM_CRYPTO_GENERICHASH_KEYBYTES_MIN",
      "SODIUM_CRYPTO_GENERICHASH_KEYBYTES_MAX",
      "SODIUM_CRYPTO_PWHASH_SALTBYTES",
      "SODIUM_CRYPTO_PWHASH_STRPREFIX",
      "SODIUM_CRYPTO_PWHASH_ALG_ARGON2I13",
      "SODIUM_CRYPTO_PWHASH_ALG_ARGON2ID13",
      "SODIUM_CRYPTO_PWHASH_MEMLIMIT_INTERACTIVE",
      "SODIUM_CRYPTO_PWHASH_OPSLIMIT_INTERACTIVE",
      "SODIUM_CRYPTO_PWHASH_MEMLIMIT_MODERATE",
      "SODIUM_CRYPTO_PWHASH_OPSLIMIT_MODERATE",
      "SODIUM_CRYPTO_PWHASH_MEMLIMIT_SENSITIVE",
      "SODIUM_CRYPTO_PWHASH_OPSLIMIT_SENSITIVE",
      "SODIUM_CRYPTO_SCALARMULT_BYTES",
      "SODIUM_CRYPTO_SCALARMULT_SCALARBYTES",
      "SODIUM_CRYPTO_SHORTHASH_BYTES",
      "SODIUM_CRYPTO_SHORTHASH_KEYBYTES",
      "SODIUM_CRYPTO_SECRETBOX_KEYBYTES",
      "SODIUM_CRYPTO_SECRETBOX_MACBYTES",
      "SODIUM_CRYPTO_SECRETBOX_NONCEBYTES",
      "SODIUM_CRYPTO_SIGN_BYTES",
      "SODIUM_CRYPTO_SIGN_SEEDBYTES",
      "SODIUM_CRYPTO_SIGN_PUBLICKEYBYTES",
      "SODIUM_CRYPTO_SIGN_SECRETKEYBYTES",
      "SODIUM_CRYPTO_SIGN_KEYPAIRBYTES",
      "SODIUM_CRYPTO_STREAM_KEYBYTES",
      "SODIUM_CRYPTO_STREAM_NONCEBYTES"
    ]
  },
  {
    "name": "php-ds/php-ds",
    "type": "polyfill",
    "require": {
      "php": "7.0"
    },
    "replace": {
      "ext-ds": "*"
    },
    "functions": [],
    "classes": [
      "Ds\\Collection",
      "Ds\\Hashable",
      "Ds\\Sequence",
      "Ds\\Vector",
      "Ds\\Deque",
      "Ds\\Map",
      "Ds\\Pair",
      "Ds\\Set",
      "Ds\\Stack",
      "Ds\\Queue",
      "Ds\\PriorityQueue"
    ],
    "constants": []
  },
  {
    "name": "phpseclib/mcrypt_compat",
    "type": "polyfill",
    "require": {
      "php": "5.3"
    },
    "replace": {
      "ext-mcrypt": "*"
    },
    "functions": [
      "mcrypt_list_algorithms",
      "mcrypt_list_modes",
      "mcrypt_create_iv",
      "mcrypt_module_open",
      "mcrypt_enc_get_key_size",
      "mcrypt_enc_get_iv_size",
      "mcrypt_enc_get_block_size",
      "mcrypt_generic_init",
      "mcrypt_generic",
      "mcrypt_generic_deinit",
      "mcrypt_module_close",
      "mdecrypt_generic",
      "mcrypt_enc_get_algorithms_name",
      "mcrypt_enc_get_modes_name",
      "mcrypt_enc_is_block_algorithm_mode",
      "mcrypt_enc_is_block_algorithm",
      "mcrypt_enc_self_test",
      "mcrypt_module_get_supported_key_sizes",
      "mcrypt_encrypt",
      "mcrypt_module_get_algo_block_size",
      "mcrypt_get_block_size",
      "mcrypt_get_cipher_name",
      "mcrypt_get_key_size",
      "mcrypt_get_iv_size",
      "mcrypt_module_get_algo_key_size",
      "mcrypt_enc_get_supported_key_sizes",
      "mcrypt_module_is_block_algorithm_mode",
      "mcrypt_module_is_block_algorithm",
      "mcrypt_module_is_block_mode",
      "mcrypt_module_self_test",
      "mcrypt_decrypt"
    ],
    "classes": [],
    "constants": [
      "MCRYPT_MODE_ECB",
      "MCRYPT_MODE_CBC",
      "MCRYPT_MODE_CFB",
      "MCRYPT_MODE_OFB",
      "MCRYPT_MODE_NOFB",
      "MCRYPT_MODE_STREAM",
      "MCRYPT_ENCRYPT",
      "MCRYPT_DECRYPT",
      "MCRYPT_DEV_RANDOM",
      "MCRYPT_DEV_URANDOM",
      "MCRYPT_RAND",
      "MCRYPT_3DES",
      "MCRYPT_ARCFOUR_IV",
      "MCRYPT_ARCFOUR",
      "MCRYPT_BLOWFISH",
      "MCRYPT_CAST_128",
      "MCRYPT_CAST_256",
      "MCRYPT_CRYPT",
      "MCRYPT_DES",
      "MCRYPT_GOST",
      "MCRYPT_IDEA",
      "MCRYPT_LOKI97",
      "MCRYPT_MARS",
      "MCRYPT_PANAMA",
      "MCRYPT_RIJNDAEL_128",
      "MCRYPT_RIJNDAEL_192",
      "MCRYPT_RIJNDAEL_256",
      "MCRYPT_RC2",
      "MCRYPT_RC6",
      "MCRYPT_SAFER64",
      "MCRYPT_SAFER128",
      "MCRYPT_SAFERPLUS",
      "MCRYPT_SERPENT",
      "MCRYPT_SKIPJACK",
      "MCRYPT_THREEWAY",
      "MCRYPT_TRIPLEDES",
      "MCRYPT_TWOFISH",
      "MCRYPT_WAKE",
      "MCRYPT_XTEA"
    ]
  },
  {
    "name": "positibe/polyfill-apc-php70",
    "type": "polyfill",
    "require": {
      "php": "7.0",
      "ext-apcu": "*"
    },
    "replace": {
      "ext-apc": "*"
    },
    "functions": [
      "apc_add",
      "apc_cache_info",
      "apc_cas",
      "apc_clear_cache",
      "apc_dec",
      "apc_delete",
      "apc_exists",
      "apc_fetch",
      "apc_inc",
      "apc_sma_info",
      "apc_store"
    ],
    "classes": [
      "APCIterator"
    ],
    "constants": []
  },
  {
    "name": "ralouphie/getallheaders",
    "type": "polyfill",
    "require": {
      "php": "5.3"
    },
    "replace": [],
    "functions": [
      "getallheaders"
    ],
    "classes": [],
    "constants": []
  },
  {
    "name": "sarciszewski/php-future",
    "type": "polyfill",
    "require": {
      "php": "5.4"
    },
    "replace": {
      "php": "5.*"
    },
    "functions": [
      "array_column",
      "boolval",
      "hex2bin",
      "hash_equals",
      "hash_pbkdf2",
      "getimagesizefromstring",
      "openssl_pbkdf2"
    ],
    "classes": [
      "JsonSerializable",
      "SessionHandlerInterface"
    ],
    "constants": []
  },
  {
    "name": "symfony/intl",
    "type": "polyfill",
    "require": {
      "php": "5.3"
    },
    "replace": {
      "ext-intl": "*"
    },
    "functions": [],
    "classes": [
      "Locale",
      "NumberFormatter",
      "IntlDateFormatter",
      "Collator"
    ],
    "constants": []
  },
  {
    "name": "symfony/polyfill",
    "type": "polyfill",
    "require": {
      "php": "5.3"
    },
    "replace": {
      "ext-mbstring": "*",
      "ext-intl": "*",
      "ext-iconv": "*",
      "php": "5.* && 7.*",
      "ext-apcu": "*",
      "ext-ctype": "*"
    },
    "functions": [
      "apcu_add",
      "apcu_delete",
      "apcu_exists",
      "apcu_fetch",
      "apcu_store",
      "apcu_cache_info",
      "apcu_cas",
      "apcu_clear_cache",
      "apcu_dec",
      "apcu_inc",
      "apcu_sma_info",
      "trait_exists",
      "class_uses",
      "hex2bin",
      "session_register_shutdown",
      "boolval",
      "json_last_error_msg",
      "array_column",
      "hash_pbkdf2",
      "password_hash",
      "password_get_info",
      "password_needs_rehash",
      "password_verify",
      "hash_equals",
      "ldap_escape",
      "gzopen",
      "gzseek",
      "gztell",
      "intdiv",
      "preg_replace_callback_array",
      "error_clear_last",
      "random_bytes",
      "random_int",
      "is_iterable",
      "spl_object_id",
      "stream_isatty",
      "sapi_windows_vt100_support",
      "utf8_encode",
      "utf8_decode",
      "iconv",
      "iconv_get_encoding",
      "iconv_set_encoding",
      "iconv_mime_encode",
      "iconv_mime_decode_headers",
      "iconv_strlen",
      "iconv_strpos",
      "iconv_strrpos",
      "iconv_substr",
      "iconv_mime_decode",
      "grapheme_extract",
      "grapheme_stripos",
      "grapheme_stristr",
      "grapheme_strlen",
      "grapheme_strpos",
      "grapheme_strripos",
      "grapheme_strrpos",
      "grapheme_strstr",
      "grapheme_substr",
      "intl_is_failure",
      "intl_get_error_code",
      "intl_get_error_message",
      "intl_error_name",
      "mb_convert_encoding",
      "mb_decode_mimeheader",
      "mb_encode_mimeheader",
      "mb_decode_numericentity",
      "mb_encode_numericentity",
      "mb_convert_case",
      "mb_internal_encoding",
      "mb_language",
      "mb_list_encodings",
      "mb_encoding_aliases",
      "mb_check_encoding",
      "mb_detect_encoding",
      "mb_detect_order",
      "mb_parse_str",
      "mb_strlen",
      "mb_strpos",
      "mb_strtolower",
      "mb_strtoupper",
      "mb_substitute_character",
      "mb_substr",
      "mb_stripos",
      "mb_stristr",
      "mb_strrchr",
      "mb_strrichr",
      "mb_strripos",
      "mb_strrpos",
      "mb_strstr",
      "mb_get_info",
      "mb_http_output",
      "mb_strwidth",
      "mb_substr_count",
      "mb_output_handler",
      "mb_http_input",
      "mb_convert_variables",
      "mb_ord",
      "mb_chr",
      "mb_scrub",
      "ctype_alnum",
      "ctype_alpha",
      "ctype_cntrl",
      "ctype_digit",
      "ctype_graph",
      "ctype_lower",
      "ctype_print",
      "ctype_punct",
      "ctype_space",
      "ctype_upper",
      "ctype_xdigit",
      "is_countable",
      "hrtime",
      "array_key_first",
      "array_key_last",
      "msgfmt_format_message",
      "idn_to_ascii",
      "idn_to_utf8"
    ],
    "classes": [
      "APCUIterator",
      "SessionUpdateTimestampHandlerInterface",
      "ArithmeticError",
      "AssertionError",
      "DivisionByZeroError",
      "Error",
      "ParseError",
      "TypeError",
      "Collator",
      "NumberFormatter",
      "Locale",
      "IntlDateFormatter",
      "Normalizer"
    ],
    "constants": [
      "PASSWORD_BCRYPT",
      "PASSWORD_DEFAULT",
      "PASSWORD_BCRYPT_DEFAULT_COST",
      "PHP_INT_MIN",
      "PHP_OS_FAMILY",
      "ICONV_IMPL",
      "ICONV_VERSION",
      "ICONV_MIME_DECODE_STRICT",
      "ICONV_MIME_DECODE_CONTINUE_ON_ERROR",
      "U_IDNA_PROHIBITED_ERROR",
      "U_IDNA_ERROR_START",
      "U_IDNA_UNASSIGNED_ERROR",
      "U_IDNA_CHECK_BIDI_ERROR",
      "U_IDNA_STD3_ASCII_RULES_ERROR",
      "U_IDNA_ACE_PREFIX_ERROR",
      "U_IDNA_VERIFICATION_ERROR",
      "U_IDNA_LABEL_TOO_LONG_ERROR",
      "U_IDNA_ZERO_LENGTH_LABEL_ERROR",
      "U_IDNA_DOMAIN_NAME_TOO_LONG_ERROR",
      "U_IDNA_ERROR_LIMIT",
      "U_STRINGPREP_PROHIBITED_ERROR",
      "U_STRINGPREP_UNASSIGNED_ERROR",
      "U_STRINGPREP_CHECK_BIDI_ERROR",
      "IDNA_DEFAULT",
      "IDNA_ALLOW_UNASSIGNED",
      "IDNA_USE_STD3_RULES",
      "IDNA_CHECK_BIDI",
      "IDNA_CHECK_CONTEXTJ",
      "IDNA_NONTRANSITIONAL_TO_ASCII",
      "IDNA_NONTRANSITIONAL_TO_UNICODE",
      "INTL_IDNA_VARIANT_2003",
      "INTL_IDNA_VARIANT_UTS46",
      "IDNA_ERROR_EMPTY_LABEL",
      "IDNA_ERROR_LABEL_TOO_LONG",
      "IDNA_ERROR_DOMAIN_NAME_TOO_LONG",
      "IDNA_ERROR_LEADING_HYPHEN",
      "IDNA_ERROR_TRAILING_HYPHEN",
      "IDNA_ERROR_HYPHEN_3_4",
      "IDNA_ERROR_LEADING_COMBINING_MARK",
      "IDNA_ERROR_DISALLOWED",
      "IDNA_ERROR_PUNYCODE",
      "IDNA_ERROR_LABEL_HAS_DOT",
      "IDNA_ERROR_INVALID_ACE_LABEL",
      "IDNA_ERROR_BIDI",
      "IDNA_ERROR_CONTEXTJ"
    ]
  },
  {
    "name": "symfony/polyfill-apcu",
    "type": "polyfill",
    "require": {
      "php": "5.3",
      "ext-apc": "*"
    },
    "replace": {
      "ext-apcu": "*"
    },
    "functions": [
      "apcu_add",
      "apcu_delete",
      "apcu_exists",
      "apcu_fetch",
      "apcu_store",
      "apcu_cache_info",
      "apcu_cas",
      "apcu_clear_cache",
      "apcu_dec",
      "apcu_inc",
      "apcu_sma_info"
    ],
    "classes": [
      "APCUIterator"
    ],
    "constants": []
  },
  {
    "name": "symfony/polyfill-ctype",
    "type": "polyfill",
    "require": {
      "php": "5.3"
    },
    "replace": {
      "ext-ctype": "*"
    },
    "functions": [
      "ctype_alnum",
      "ctype_alpha",
      "ctype_cntrl",
      "ctype_digit",
      "ctype_graph",
      "ctype_lower",
      "ctype_print",
      "ctype_punct",
      "ctype_space",
      "ctype_upper",
      "ctype_xdigit"
    ],
    "classes": [],
    "constants": []
  },
  {
    "name": "symfony/polyfill-iconv",
    "type": "polyfill",
    "require": {
      "php": "5.3"
    },
    "replace": {
      "ext-iconv": "*"
    },
    "functions": [
      "iconv",
      "iconv_get_encoding",
      "iconv_set_encoding",
      "iconv_mime_encode",
      "iconv_mime_decode_headers",
      "iconv_strlen",
      "iconv_strpos",
      "iconv_strrpos",
      "iconv_substr",
      "iconv_mime_decode"
    ],
    "classes": [],
    "constants": [
      "ICONV_IMPL",
      "ICONV_VERSION",
      "ICONV_MIME_DECODE_STRICT",
      "ICONV_MIME_DECODE_CONTINUE_ON_ERROR"
    ]
  },
  {
    "name": "symfony/polyfill-intl-grapheme",
    "type": "polyfill",
    "require": {
      "php": "5.3"
    },
    "replace": {
      "ext-intl": "*"
    },
    "functions": [
      "grapheme_extract",
      "grapheme_stripos",
      "grapheme_stristr",
      "grapheme_strlen",
      "grapheme_strpos",
      "grapheme_strripos",
      "grapheme_strrpos",
      "grapheme_strstr",
      "grapheme_substr"
    ],
    "classes": [],
    "constants": []
  },
  {
    "name": "symfony/polyfill-intl-icu",
    "type": "polyfill",
    "require": {
      "php": "5.3"
    },
    "replace": {
      "ext-intl": "*"
    },
    "functions": [
      "intl_is_failure",
      "intl_get_error_code",
      "intl_get_error_message",
      "intl_error_name"
    ],
    "classes": [
      "Collator",
      "NumberFormatter",
      "Locale",
      "IntlDateFormatter"
    ],
    "constants": []
  },
  {
    "name": "symfony/polyfill-intl-idn",
    "type": "polyfill",
    "require": {
      "php": "5.3"
    },
    "replace": {
      "ext-intl": "*"
    },
    "functions": [
      "idn_to_ascii",
      "idn_to_utf8"
    ],
    "classes": [],
    "constants": [
      "U_IDNA_PROHIBITED_ERROR",
      "U_IDNA_ERROR_START",
      "U_IDNA_UNASSIGNED_ERROR",
      "U_IDNA_CHECK_BIDI_ERROR",
      "U_IDNA_STD3_ASCII_RULES_ERROR",
      "U_IDNA_ACE_PREFIX_ERROR",
      "U_IDNA_VERIFICATION_ERROR",
      "U_IDNA_LABEL_TOO_LONG_ERROR",
      "U_IDNA_ZERO_LENGTH_LABEL_ERROR",
      "U_IDNA_DOMAIN_NAME_TOO_LONG_ERROR",
      "U_IDNA_ERROR_LIMIT",
      "U_STRINGPREP_PROHIBITED_ERROR",
      "U_STRINGPREP_UNASSIGNED_ERROR",
      "U_STRINGPREP_CHECK_BIDI_ERROR",
      "IDNA_DEFAULT",
      "IDNA_ALLOW_UNASSIGNED",
      "IDNA_USE_STD3_RULES",
      "IDNA_CHECK_BIDI",
      "IDNA_CHECK_CONTEXTJ",
      "IDNA_NONTRANSITIONAL_TO_ASCII",
      "IDNA_NONTRANSITIONAL_TO_UNICODE",
      "INTL_IDNA_VARIANT_2003",
      "INTL_IDNA_VARIANT_UTS46",
      "IDNA_ERROR_EMPTY_LABEL",
      "IDNA_ERROR_LABEL_TOO_LONG",
      "IDNA_ERROR_DOMAIN_NAME_TOO_LONG",
      "IDNA_ERROR_LEADING_HYPHEN",
      "IDNA_ERROR_TRAILING_HYPHEN",
      "IDNA_ERROR_HYPHEN_3_4",
      "IDNA_ERROR_LEADING_COMBINING_MARK",
      "IDNA_ERROR_DISALLOWED",
      "IDNA_ERROR_PUNYCODE",
      "IDNA_ERROR_LABEL_HAS_DOT",
      "IDNA_ERROR_INVALID_ACE_LABEL",
      "IDNA_ERROR_BIDI",
      "IDNA_ERROR_CONTEXTJ"
    ]
  },
  {
    "name": "symfony/polyfill-intl-messageformatter",
    "type": "polyfill",
    "require": {
      "php": "5.3"
    },
    "replace": {
      "ext-intl": "*"
    },
    "functions": [
      "msgfmt_format_message"
    ],
    "classes": [],
    "constants": []
  },
  {
    "name": "symfony/polyfill-intl-normalizer",
    "type": "polyfill",
    "require": {
      "php": "5.3"
    },
    "replace": {
      "ext-intl": "*"
    },
    "functions": [],
    "classes": [
      "Normalizer"
    ],
    "constants": []
  },
  {
    "name": "symfony/polyfill-mbstring",
    "type": "polyfill",
    "require": {
      "php": "5.3"
    },
    "replace": {
      "ext-mbstring": "*"
    },
    "functions": [
      "mb_convert_encoding",
      "mb_decode_mimeheader",
      "mb_encode_mimeheader",
      "mb_decode_numericentity",
      "mb_encode_numericentity",
      "mb_convert_case",
      "mb_internal_encoding",
      "mb_language",
      "mb_list_encodings",
      "mb_encoding_aliases",
      "mb_check_encoding",
      "mb_detect_encoding",
      "mb_detect_order",
      "mb_parse_str",
      "mb_strlen",
      "mb_strpos",
      "mb_strtolower",
      "mb_strtoupper",
      "mb_substitute_character",
      "mb_substr",
      "mb_stripos",
      "mb_stristr",
      "mb_strrchr",
      "mb_strrichr",
      "mb_strripos",
      "mb_strrpos",
      "mb_strstr",
      "mb_get_info",
      "mb_http_output",
      "mb_strwidth",
      "mb_substr_count",
      "mb_output_handler",
      "mb_http_input",
      "mb_convert_variables",
      "mb_ord",
      "mb_chr",
      "mb_scrub"
    ],
    "classes": [],
    "constants": []
  },
  {
    "name": "symfony/polyfill-php54",
    "type": "polyfill",
    "require": {
      "php": "5.3"
    },
    "replace": {
      "php": "5.4.*"
    },
    "functions": [
      "trait_exists",
      "class_uses",
      "hex2bin",
      "session_register_shutdown"
    ],
    "classes": [],
    "constants": []
  },
  {
    "name": "symfony/polyfill-php55",
    "type": "polyfill",
    "require": {
      "php": "5.3"
    },
    "replace": {
      "php": "5.5.*"
    },
    "functions": [
      "boolval",
      "json_last_error_msg",
      "array_column",
      "hash_pbkdf2",
      "password_hash",
      "password_get_info",
      "password_needs_rehash",
      "password_verify"
    ],
    "classes": [],
    "constants": [
      "PASSWORD_BCRYPT",
      "PASSWORD_DEFAULT",
      "PASSWORD_BCRYPT_DEFAULT_COST"
    ]
  },
  {
    "name": "symfony/polyfill-php56",
    "type": "polyfill",
    "require": {
      "php": "5.3"
    },
    "replace": {
      "php": "5.6.*"
    },
    "functions": [
      "hash_equals",
      "ldap_escape",
      "gzopen",
      "gzseek",
      "gztell"
    ],
    "classes": [],
    "constants": []
  },
  {
    "name": "symfony/polyfill-php70",
    "type": "polyfill",
    "require": {
      "php": "5.3"
    },
    "replace": {
      "php": "7.0.*"
    },
    "functions": [
      "intdiv",
      "preg_replace_callback_array",
      "error_clear_last",
      "random_bytes",
      "random_int"
    ],
    "classes": [
      "SessionUpdateTimestampHandlerInterface",
      "ArithmeticError",
      "AssertionError",
      "DivisionByZeroError",
      "Error",
      "ParseError",
      "TypeError"
    ],
    "constants": [
      "PHP_INT_MIN"
    ]
  },
  {
    "name": "symfony/polyfill-php71",
    "type": "polyfill",
    "require": {
      "php": "5.3"
    },
    "replace": {
      "php": "7.1.*"
    },
    "functions": [
      "is_iterable"
    ],
    "classes": [],
    "constants": []
  },
  {
    "name": "symfony/polyfill-php72",
    "type": "polyfill",
    "require": {
      "php": "5.3"
    },
    "replace": {
      "php": "7.2.*"
    },
    "functions": [
      "spl_object_id",
      "stream_isatty",
      "sapi_windows_vt100_support",
      "utf8_encode",
      "utf8_decode"
    ],
    "classes": [],
    "constants": [
      "PHP_OS_FAMILY"
    ]
  },
  {
    "name": "symfony/polyfill-php73",
    "type": "polyfill",
    "require": {
      "php": "5.3"
    },
    "replace": {
      "php": "7.3.*"
    },
    "functions": [
      "is_countable",
      "hrtime",
      "array_key_first",
      "array_key_last"
    ],
    "classes": [],
    "constants": []
  },
  {
    "name": "tea/future",
    "type": "polyfill",
    "require": {
      "php": "5.3.3"
    },
    "replace": {
      "php": "5.4 && 5.5 && 5.6 && 7.0 && 7.1"
    },
    "functions": [
      "trait_exists",
      "class_uses",
      "hex2bin",
      "session_register_shutdown",
      "boolval",
      "json_last_error_msg",
      "array_column",
      "hash_pbkdf2",
      "password_hash",
      "password_get_info",
      "password_needs_rehash",
      "password_verify",
      "hash_equals",
      "ldap_escape",
      "gzopen",
      "gzseek",
      "gztell",
      "intdiv",
      "preg_replace_callback_array",
      "error_clear_last",
      "random_bytes",
      "random_int",
      "is_iterable"
    ],
    "classes": [
      "SessionUpdateTimestampHandlerInterface",
      "ArithmeticError",
      "AssertionError",
      "DivisionByZeroError",
      "Error",
      "ParseError",
      "TypeError"
    ],
    "constants": [
      "PASSWORD_BCRYPT",
      "PASSWORD_DEFAULT",
      "PASSWORD_BCRYPT_DEFAULT_COST",
      "PHP_INT_MIN"
    ]
  },
  {
    "name": "voku/portable-utf8",
    "type": "polyfill",
    "require": {
      "php": "7.0"
    },
    "replace": {
      "php": "7.2.*",
      "ext-iconv": "*",
      "ext-mbstring": "*",
      "ext-intl": "*"
    },
    "functions": [
      "spl_object_id",
      "stream_isatty",
      "sapi_windows_vt100_support",
      "utf8_encode",
      "utf8_decode",
      "iconv",
      "iconv_get_encoding",
      "iconv_set_encoding",
      "iconv_mime_encode",
      "iconv_mime_decode_headers",
      "iconv_strlen",
      "iconv_strpos",
      "iconv_strrpos",
      "iconv_substr",
      "iconv_mime_decode",
      "mb_convert_encoding",
      "mb_decode_mimeheader",
      "mb_encode_mimeheader",
      "mb_decode_numericentity",
      "mb_encode_numericentity",
      "mb_convert_case",
      "mb_internal_encoding",
      "mb_language",
      "mb_list_encodings",
      "mb_encoding_aliases",
      "mb_check_encoding",
      "mb_detect_encoding",
      "mb_detect_order",
      "mb_parse_str",
      "mb_strlen",
      "mb_strpos",
      "mb_strtolower",
      "mb_strtoupper",
      "mb_substitute_character",
      "mb_substr",
      "mb_stripos",
      "mb_stristr",
      "mb_strrchr",
      "mb_strrichr",
      "mb_strripos",
      "mb_strrpos",
      "mb_strstr",
      "mb_get_info",
      "mb_http_output",
      "mb_strwidth",
      "mb_substr_count",
      "mb_output_handler",
      "mb_http_input",
      "mb_convert_variables",
      "mb_ord",
      "mb_chr",
      "mb_scrub",
      "grapheme_extract",
      "grapheme_stripos",
      "grapheme_stristr",
      "grapheme_strlen",
      "grapheme_strpos",
      "grapheme_strripos",
      "grapheme_strrpos",
      "grapheme_strstr",
      "grapheme_substr"
    ],
    "classes": [
      "Normalizer"
    ],
    "constants": [
      "PHP_OS_FAMILY",
      "ICONV_IMPL",
      "ICONV_VERSION",
      "ICONV_MIME_DECODE_STRICT",
      "ICONV_MIME_DECODE_CONTINUE_ON_ERROR"
    ]
  },
  {
    "name": "wizacha/new-relic-polyfill",
    "type": "stub",
    "require": [],
    "replace": {
      "ext-newrelic": "*"
    },
    "functions": [
      "newrelic_add_custom_parameter",
      "newrelic_add_custom_tracer",
      "newrelic_background_job",
      "newrelic_capture_params",
      "newrelic_custom_metric",
      "newrelic_disable_autorum",
      "newrelic_end_of_transaction",
      "newrelic_end_transaction",
      "newrelic_get_browser_timing_footer",
      "newrelic_get_browser_timing_header",
      "newrelic_ignore_apdex",
      "newrelic_ignore_transaction",
      "newrelic_name_transaction",
      "newrelic_notice_error",
      "newrelic_record_custom_event",
      "newrelic_record_datastore_segment",
      "newrelic_set_appname",
      "newrelic_set_user_attributes",
      "newrelic_start_transaction"
    ],
    "classes": [],
    "constants": []
  },
  {
    "name": "wizaplace/sqreen-polyfill",
    "type": "stub",
    "require": [],
    "replace": {
      "ext-sqreen": "*"
    },
    "functions": [
      "sqreen\\auth_track",
      "sqreen\\signup_track",
      "sqreen\\identify"
    ],
    "classes": [],
    "constants": []
  },
  {
    "name": "wyrihaximus/msgpack",
    "type": "polyfill",
    "require": {
      "php": "7.0"
    },
    "replace": {
      "ext-msgpack": "*"
    },
    "functions": [
      "msgpack_pack",
      "msgpack_unpack"
    ],
    "classes": [],
    "constants": []
  },
  {
    "name": "yuloh/bccomp-polyfill",
    "type": "polyfill",
    "require": [],
    "replace": {
      "ext-bcmath": "*"
    },
    "functions": [
      "bccomp"
    ],
    "classes": [],
    "constants": []
  }
]
